import * as React from "react";
import { IconSvgProps } from "@/types";

export const DiscordIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        d="M14.82 4.26a10.14 10.14 0 0 0-.53 1.1 14.66 14.66 0 0 0-4.58 0 10.14 10.14 0 0 0-.53-1.1 16 16 0 0 0-4.13 1.3 17.33 17.33 0 0 0-3 11.59 16.6 16.6 0 0 0 5.07 2.59A12.89 12.89 0 0 0 8.23 18a9.65 9.65 0 0 1-1.71-.83 3.39 3.39 0 0 0 .42-.33 11.66 11.66 0 0 0 10.12 0q.21.18.42.33a10.84 10.84 0 0 1-1.71.84 12.41 12.41 0 0 0 1.08 1.78 16.44 16.44 0 0 0 5.06-2.59 17.22 17.22 0 0 0-3-11.59 16.09 16.09 0 0 0-4.09-1.35zM8.68 14.81a1.94 1.94 0 0 1-1.8-2 1.93 1.93 0 0 1 1.8-2 1.93 1.93 0 0 1 1.8 2 1.93 1.93 0 0 1-1.8 2zm6.64 0a1.94 1.94 0 0 1-1.8-2 1.93 1.93 0 0 1 1.8-2 1.92 1.92 0 0 1 1.8 2 1.92 1.92 0 0 1-1.8 2z"
        fill="currentColor"
      />
    </svg>
  );
};

export const DiscordIconGlass: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 18"
      fill="currentColor"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M8.4018 6.19385C7.05808 6.19385 5.96484 7.39823 5.96484 8.8786C5.96484 10.359 7.05808 11.5634 8.4018 11.5634C9.74556 11.5634 10.8388 10.359 10.8388 8.8786C10.8388 7.39823 9.74556 6.19385 8.4018 6.19385ZM8.4018 10.2018C7.80884 10.2018 7.3264 9.60821 7.3264 8.8786C7.3264 8.14899 7.80884 7.5554 8.4018 7.5554C8.9948 7.5554 9.47729 8.14899 9.47729 8.8786C9.47729 9.60821 8.9948 10.2018 8.4018 10.2018Z"
        fill="currentColor"
      />
      <path
        d="M14.8345 6.19385C13.4907 6.19385 12.3975 7.39823 12.3975 8.8786C12.3975 10.359 13.4907 11.5634 14.8345 11.5634C16.1782 11.5634 17.2715 10.359 17.2715 8.8786C17.2715 7.39823 16.1782 6.19385 14.8345 6.19385ZM14.8345 10.2018C14.2415 10.2018 13.759 9.60821 13.759 8.8786C13.759 8.14899 14.2415 7.5554 14.8345 7.5554C15.4275 7.5554 15.9099 8.14899 15.9099 8.8786C15.9099 9.60821 15.4275 10.2018 14.8345 10.2018Z"
        fill="currentColor"
      />
      <path
        d="M23.2361 13.4297C23.2201 13.1419 22.813 6.3334 20.2275 2.26059C20.1746 2.1773 20.1042 2.10646 20.0213 2.05309C16.8244 -0.00553706 14.6468 0.000363081 14.5557 0C14.2916 0.00349465 14.0642 0.157078 13.9543 0.379011L12.856 2.4837C12.4469 2.45692 12.0339 2.44303 11.6186 2.44303C11.2034 2.44303 10.7903 2.45692 10.3812 2.4837L9.28417 0.381462C9.17475 0.158258 8.94659 0.00354001 8.6815 4.53602e-05C8.58987 -0.000499261 6.41252 -0.00531008 3.21596 2.05313C3.13304 2.10655 3.06265 2.17735 3.00977 2.26063C0.424276 6.3334 0.0171261 13.1419 0.00105977 13.4297C-0.00901572 13.6102 0.0530711 13.7872 0.173659 13.9219C0.293567 14.0557 3.14189 17.1855 7.07891 17.1855C7.09652 17.1855 7.11463 17.1854 7.13228 17.1853C7.33919 17.1838 7.53412 17.0883 7.66215 16.9259L9.47814 14.6213C10.1756 14.7009 10.892 14.7424 11.6186 14.7424C12.3452 14.7424 13.0616 14.7009 13.759 14.6213L15.575 16.9259C15.7031 17.0883 15.898 17.1838 16.1049 17.1853C16.1228 17.1854 16.1404 17.1855 16.1583 17.1855C20.0949 17.1855 22.9437 14.0557 23.0635 13.9219C23.1841 13.7872 23.2462 13.6102 23.2361 13.4297ZM16.4352 15.8175L15.2998 14.3766C17.0281 14.0211 18.5793 13.4161 19.7901 12.6038C20.1023 12.3943 20.1857 11.9714 19.9762 11.6592C19.7668 11.3469 19.3437 11.2635 19.0316 11.4731C17.2244 12.6855 14.5225 13.3808 11.6186 13.3808C8.71486 13.3808 6.0129 12.6855 4.20562 11.4732C3.89333 11.2638 3.47048 11.3471 3.26102 11.6593C3.05157 11.9716 3.1349 12.3945 3.44715 12.6039C4.65802 13.4161 6.20919 14.0212 7.93741 14.3767L6.8021 15.8175C4.1365 15.6938 2.0152 13.8297 1.38176 13.2111C1.48751 11.892 2.03622 6.45154 4.0805 3.11659C6.08792 1.84944 7.60283 1.49703 8.27943 1.39909L8.92535 2.63678C7.40672 2.85853 5.98395 3.26605 4.77203 3.83663C4.43187 3.99675 4.28596 4.40235 4.44607 4.74256C4.60624 5.08268 5.01184 5.22854 5.35196 5.06852C7.08322 4.25344 9.30877 3.80459 11.6186 3.80459C13.9286 3.80459 16.1542 4.25354 17.8853 5.0687C17.979 5.11281 18.0777 5.13373 18.1749 5.13373C18.4303 5.13373 18.6752 4.98918 18.7913 4.74279C18.9514 4.40267 18.8055 3.99702 18.4653 3.83686C17.2533 3.26623 15.8306 2.85863 14.3118 2.63687L14.9577 1.39918C15.6343 1.49712 17.1492 1.84953 19.1567 3.11668C21.1987 6.44813 21.7492 11.8943 21.8554 13.2123C21.2236 13.8322 19.1117 15.6948 16.4352 15.8175Z"
        fill="currentColor"
      />
    </svg>
  );
};

export const FacebookIconGlass: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 14 28"
      fill="currentColor"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M13.9997 4.6478L11.4621 4.64897C9.47248 4.64897 9.08727 5.63102 9.08727 7.07224V10.25H13.8325L13.8308 15.2275H9.08727V28H4.13783V15.2275H0V10.25H4.13783V6.57961C4.13783 2.31968 6.64323 0 10.302 0L14 0.00611055L13.9997 4.6478Z"
        fill="currentColor"
      />
    </svg>
  );
};

export const InstagramIconGlass: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="currentColor"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M11.5642 0C8.42593 0 8.03132 0.0144527 6.79829 0.0693839C5.56525 0.127207 4.72541 0.320894 3.98964 0.60711C3.21787 0.897402 2.5188 1.35276 1.94133 1.94134C1.35312 2.51911 0.897821 3.21807 0.607117 3.98964C0.320902 4.72396 0.125754 5.56526 0.0693763 6.79396C0.014445 8.02988 0 8.42304 0 11.5656C0 14.7053 0.014445 15.0985 0.0693763 16.3315C0.1272 17.5631 0.320902 18.4029 0.607117 19.1387C0.903445 19.899 1.29807 20.5437 1.94133 21.187C2.58315 21.8302 3.22785 22.2263 3.98819 22.5212C4.7254 22.8074 5.5638 23.0026 6.79539 23.0589C8.02987 23.1139 8.42304 23.1283 11.5642 23.1283C14.7053 23.1283 15.097 23.1139 16.3315 23.0589C17.5616 23.0011 18.4044 22.8074 19.1401 22.5212C19.9114 22.2308 20.6099 21.7754 21.187 21.187C21.8302 20.5437 22.2249 19.899 22.5212 19.1387C22.806 18.4029 23.0011 17.5631 23.0589 16.3315C23.1139 15.0985 23.1283 14.7053 23.1283 11.5642C23.1283 8.42305 23.1139 8.02988 23.0589 6.7954C23.0011 5.56526 22.806 4.72396 22.5212 3.98964C22.2305 3.21806 21.7752 2.51908 21.187 1.94134C20.6097 1.35254 19.9106 0.897151 19.1387 0.60711C18.4015 0.320894 17.5602 0.125761 16.33 0.0693839C15.0956 0.0144527 14.7038 0 11.5613 0H11.5642ZM10.5277 2.08443H11.5656C14.6532 2.08443 15.0189 2.09457 16.2375 2.15093C17.365 2.20153 17.9779 2.3909 18.3856 2.54845C18.9248 2.75805 19.3107 3.00957 19.7155 3.41431C20.1202 3.81905 20.3703 4.20356 20.5799 4.74419C20.7389 5.15038 20.9268 5.76326 20.9774 6.89077C21.0338 8.10934 21.0453 8.47507 21.0453 11.5613C21.0453 14.6474 21.0338 15.0146 20.9774 16.2332C20.9268 17.3607 20.7374 17.9722 20.5799 18.3798C20.3945 18.8819 20.0986 19.3359 19.714 19.7082C19.3093 20.1129 18.9248 20.363 18.3841 20.5726C17.9794 20.7316 17.3665 20.9196 16.2375 20.9716C15.0189 21.0265 14.6532 21.0395 11.5656 21.0395C8.47797 21.0395 8.11081 21.0265 6.89224 20.9716C5.76473 20.9196 5.15327 20.7316 4.74564 20.5726C4.24332 20.3875 3.78889 20.0921 3.41576 19.7082C3.03089 19.3353 2.73452 18.8809 2.54845 18.3783C2.39089 17.9721 2.20153 17.3592 2.15093 16.2317C2.096 15.0132 2.08444 14.6475 2.08444 11.5584C2.08444 8.47074 2.09601 8.10646 2.15093 6.88789C2.20297 5.76038 2.39089 5.14747 2.54989 4.73984C2.75949 4.20066 3.01101 3.8147 3.41576 3.40996C3.8205 3.00521 4.20501 2.75514 4.74564 2.54554C5.15327 2.38653 5.76473 2.19862 6.89224 2.14658C7.95903 2.09743 8.37245 2.08299 10.5277 2.08155L10.5277 2.08443ZM17.738 4.00407C16.9716 4.00407 16.3503 4.62538 16.3503 5.39178C16.3503 6.15819 16.9716 6.77949 17.738 6.77949C18.5044 6.77949 19.1257 6.15819 19.1257 5.39178C19.1257 4.62538 18.5044 4.00407 17.738 4.00407ZM11.5656 5.62595C8.28563 5.57478 5.5852 8.19225 5.53403 11.4722C5.48285 14.7522 8.1003 17.4526 11.3803 17.5038C11.4421 17.5048 11.5038 17.5048 11.5656 17.5038C14.8456 17.4526 17.463 14.7522 17.4119 11.4722C17.3618 8.26437 14.7734 5.67601 11.5656 5.62595ZM11.5656 7.70894C13.6948 7.70805 15.4215 9.43334 15.4224 11.5625C15.4233 13.6917 13.698 15.4185 11.5689 15.4194H11.5656C9.43644 15.4194 7.71041 13.6933 7.71041 11.5641C7.71041 9.43496 9.43643 7.70894 11.5656 7.70894Z"
        fill="currentColor"
      />
    </svg>
  );
};

export const TwitterIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        d="M19.633 7.997c.013.175.013.349.013.523 0 5.325-4.053 11.461-11.46 11.461-2.282 0-4.402-.661-6.186-1.809.324.037.636.05.973.05a8.07 8.07 0 0 0 5.001-1.721 4.036 4.036 0 0 1-3.767-2.793c.249.037.499.062.761.062.361 0 .724-.05 1.061-.137a4.027 4.027 0 0 1-3.23-3.953v-.05c.537.299 1.16.486 1.82.511a4.022 4.022 0 0 1-1.796-3.354c0-.748.199-1.434.548-2.032a11.457 11.457 0 0 0 8.306 4.215c-.062-.3-.1-.611-.1-.923a4.026 4.026 0 0 1 4.028-4.028c1.16 0 2.207.486 2.943 1.272a7.957 7.957 0 0 0 2.556-.973 4.02 4.02 0 0 1-1.771 2.22 8.073 8.073 0 0 0 2.319-.624 8.645 8.645 0 0 1-2.019 2.083z"
        fill="currentColor"
      />
    </svg>
  );
};

export const GithubIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        clipRule="evenodd"
        d="M12.026 2c-5.509 0-9.974 4.465-9.974 9.974 0 4.406 2.857 8.145 6.821 9.465.499.09.679-.217.679-.481 0-.237-.008-.865-.011-1.696-2.775.602-3.361-1.338-3.361-1.338-.452-1.152-1.107-1.459-1.107-1.459-.905-.619.069-.605.069-.605 1.002.07 1.527 1.028 1.527 1.028.89 1.524 2.336 1.084 2.902.829.091-.645.351-1.085.635-1.334-2.214-.251-4.542-1.107-4.542-4.93 0-1.087.389-1.979 1.024-2.675-.101-.253-.446-1.268.099-2.64 0 0 .837-.269 2.742 1.021a9.582 9.582 0 0 1 2.496-.336 9.554 9.554 0 0 1 2.496.336c1.906-1.291 2.742-1.021 2.742-1.021.545 1.372.203 2.387.099 2.64.64.696 1.024 1.587 1.024 2.675 0 3.833-2.33 4.675-4.552 4.922.355.308.675.916.675 1.846 0 1.334-.012 2.41-.012 2.737 0 .267.178.577.687.479C19.146 20.115 22 16.379 22 11.974 22 6.465 17.535 2 12.026 2z"
        fill="currentColor"
        fillRule="evenodd"
      />
    </svg>
  );
};

export const MoonFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <path
      d="M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z"
      fill="currentColor"
    />
  </svg>
);

export const SunFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <g fill="currentColor">
      <path d="M19 12a7 7 0 11-7-7 7 7 0 017 7z" />
      <path d="M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z" />
    </g>
  </svg>
);

export const HeartFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <path
      d="M12.62 20.81c-.34.12-.9.12-1.24 0C8.48 19.82 2 15.69 2 8.69 2 5.6 4.49 3.1 7.56 3.1c1.82 0 3.43.88 4.44 2.24a5.53 5.53 0 0 1 4.44-2.24C19.51 3.1 22 5.6 22 8.69c0 7-6.48 11.13-9.38 12.12Z"
      fill="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
  </svg>
);

export const SearchIcon = (props: IconSvgProps) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 24 24"
    width="1em"
    {...props}
  >
    <path
      d="M11.5 21C16.7467 21 21 16.7467 21 11.5C21 6.25329 16.7467 2 11.5 2C6.25329 2 2 6.25329 2 11.5C2 16.7467 6.25329 21 11.5 21Z"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
    />
    <path
      d="M22 22L20 20"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
    />
  </svg>
);

export const Light: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      width="166"
      height="88"
      viewBox="0 0 166 88"
      fill="currentColor"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clip-path="url(#clip0_97_350)">
        <path
          d="M70.1504 50.45C76.7778 50.45 82.1504 45.0774 82.1504 38.45C82.1504 31.8225 76.7778 26.45 70.1504 26.45C63.523 26.45 58.1504 31.8225 58.1504 38.45C58.1504 45.0774 63.523 50.45 70.1504 50.45Z"
          fill="url(#clip0_97_350)"
        />
        <path
          d="M131.901 36.54L157.821 40.14C157.971 40.16 158.111 40.17 158.261 40.17C159.101 40.17 159.921 39.84 160.521 39.23L161.291 38.46C162.541 37.21 162.541 35.19 161.291 33.94L160.521 33.17C149.871 22.52 137.461 14.28 123.621 8.67C110.261 3.25 96.1407 0.5 81.6507 0.5C67.1607 0.5 53.0407 3.25 39.6807 8.67C25.8407 14.28 13.4207 22.52 2.78074 33.17L2.01074 33.94C0.760742 35.19 0.760742 37.21 2.01074 38.46L2.78074 39.23C3.49074 39.94 4.49074 40.27 5.48074 40.14L31.4007 36.54C39.8107 35.37 48.3007 34.49 56.8107 33.91C56.7407 34.66 56.7007 35.43 56.7007 36.2C56.7007 49.98 67.8707 61.15 81.6507 61.15C95.4307 61.15 106.601 49.98 106.601 36.2C106.601 35.43 106.561 34.66 106.491 33.91C115.001 34.49 123.491 35.37 131.901 36.54ZM69.2907 47.74C64.7007 47.74 60.9807 44.02 60.9807 39.43C60.9807 34.84 64.7007 31.12 69.2907 31.12C73.8807 31.12 77.6007 34.84 77.6007 39.43C77.6007 44.02 73.8807 47.74 69.2907 47.74Z"
          fill="currentColor"
        />
        <path
          d="M165.001 54.7601L157.461 48.0702C156.711 47.1902 155.381 47.0902 154.501 47.8402L154.471 47.8701C153.591 48.6201 153.491 49.9502 154.241 50.8302L161.781 57.5101C162.531 58.3901 163.861 58.5002 164.741 57.7402L164.771 57.7101C165.651 56.9601 165.761 55.6302 165.001 54.7502V54.7601Z"
          fill="#6055A4"
        />
        <path
          d="M144.82 57.7801C144.2 56.8001 142.9 56.5101 141.92 57.1201L141.88 57.1401C140.9 57.7601 140.61 59.0601 141.22 60.0401L147.41 67.7201C148.03 68.7001 149.33 68.9901 150.31 68.3801L150.35 68.3601C151.33 67.7401 151.62 66.4401 151.01 65.4601L144.82 57.7801Z"
          fill="#6055A4"
        />
        <path
          d="M130.91 65.55C130.44 64.49 129.2 64.01 128.14 64.48L128.1 64.5C127.04 64.97 126.56 66.21 127.03 67.27L131.73 75.74C132.2 76.8 133.44 77.28 134.5 76.81L134.54 76.79C135.6 76.32 136.08 75.08 135.61 74.02L130.91 65.55Z"
          fill="#6055A4"
        />
        <path
          d="M116.021 71.2302C115.711 70.1102 114.551 69.4602 113.431 69.7702H113.391C112.271 70.0902 111.621 71.2502 111.931 72.3702L115.051 81.4102C115.361 82.5302 116.521 83.1802 117.641 82.8702H117.681C118.801 82.5502 119.451 81.3902 119.141 80.2702L116.021 71.2302Z"
          fill="#6055A4"
        />
        <path
          d="M100.471 74.7C100.321 73.55 99.2708 72.74 98.1208 72.89H98.0808C96.9308 73.04 96.1208 74.1 96.2708 75.25L97.7508 84.62C97.9008 85.77 98.9508 86.58 100.101 86.43H100.141C101.291 86.28 102.101 85.22 101.951 84.07L100.471 74.7Z"
          fill="#6055A4"
        />
        <path
          d="M82.5105 73.7701H82.4705C81.3105 73.7501 80.3605 74.6801 80.3405 75.8401L80.1605 85.3101C80.1405 86.4701 81.0705 87.4201 82.2305 87.4401H82.2705C83.4305 87.4601 84.3805 86.5301 84.4005 85.3701L84.5805 75.9101C84.6005 74.7501 83.6705 73.8001 82.5105 73.7801V73.7701Z"
          fill="#6055A4"
        />
        <path
          d="M66.9406 72.4101H66.9006C65.7506 72.2201 64.6806 73.0001 64.4906 74.1401L62.6606 83.4601C62.4806 84.6101 63.2606 85.6801 64.4006 85.8701H64.4406C65.5806 86.0601 66.6606 85.2801 66.8506 84.1401L68.6806 74.8201C68.8606 73.6701 68.0806 72.6001 66.9406 72.4101Z"
          fill="#6055A4"
        />
        <path
          d="M51.7307 68.8401H51.6907C50.5807 68.4801 49.4107 69.1001 49.0607 70.2001L45.6007 79.1401C45.2507 80.2501 45.8707 81.4201 46.9807 81.7701H47.0207C48.1307 82.1301 49.3007 81.5101 49.6507 80.4101L53.1107 71.4701C53.4607 70.3601 52.8407 69.1901 51.7307 68.8401Z"
          fill="#6055A4"
        />
        <path
          d="M37.1906 63.1102L37.1506 63.0902C36.1006 62.5902 34.8506 63.0302 34.3506 64.0702L29.3206 72.3902C28.8206 73.4302 29.2606 74.6902 30.3006 75.1902L30.3406 75.2102C31.3806 75.7102 32.6406 75.2702 33.1406 74.2302L38.1706 65.9102C38.6706 64.8602 38.2306 63.6102 37.1906 63.1102Z"
          fill="#6055A4"
        />
        <path
          d="M23.6402 55.34L23.6002 55.32C22.6402 54.67 21.3302 54.92 20.6802 55.89L14.1902 63.37C13.5402 64.33 13.7902 65.64 14.7602 66.29L14.8002 66.31C15.7602 66.96 17.0702 66.71 17.7202 65.74L24.2102 58.26C24.8602 57.3 24.6102 55.99 23.6402 55.34Z"
          fill="#6055A4"
        />
        <path
          d="M11.3104 45.6501C10.4504 44.8701 9.12045 44.9301 8.34045 45.7901L0.54045 52.2401C-0.23955 53.1001 -0.179551 54.4301 0.680449 55.2101L0.710449 55.2401C1.57045 56.0201 2.90045 55.9601 3.68045 55.1001L11.4804 48.6501C12.2604 47.7901 12.2004 46.4601 11.3404 45.6801L11.3104 45.6501Z"
          fill="#6055A4"
        />
      </g>
      <defs>
        <clipPath id="clip0_97_350">
          <rect
            width="165.5"
            height="86.93"
            fill="currentColor"
            transform="translate(0 0.5)"
          />
        </clipPath>
      </defs>
    </svg>
  );
};

export const QuestionMark: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      width="63"
      height="87"
      viewBox="0 0 63 87"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g filter="url(#filter0_f_72_8041)">
        <path
          d="M14.2953 20.1904C17.7364 20.1904 20.5171 21.1636 22.6374 23.1101C24.7577 25.0566 25.8178 27.6635 25.8178 30.9309C25.8178 34.5805 24.6882 37.2917 22.4288 39.0644C20.1695 40.8024 17.1107 41.6714 13.2525 41.6714L13.0961 46.6245H8.97715L8.7686 38.3866H10.2806C13.7217 38.3866 16.4155 37.8653 18.362 36.8225C20.3085 35.7797 21.2818 33.8159 21.2818 30.9309C21.2818 28.8453 20.6561 27.1943 19.4048 25.9777C18.1535 24.7612 16.4677 24.1529 14.3474 24.1529C12.1923 24.1529 10.4892 24.7438 9.23785 25.9256C8.02129 27.0726 7.41301 28.6542 7.41301 30.6702H2.92912C2.92912 28.5846 3.39836 26.7598 4.33685 25.1957C5.27534 23.5968 6.59617 22.3628 8.29936 21.4938C10.0373 20.6249 12.0359 20.1904 14.2953 20.1904ZM11.0105 57.3128C10.1068 57.3128 9.34212 57 8.71646 56.3743C8.0908 55.7487 7.77797 54.984 7.77797 54.0803C7.77797 53.1765 8.0908 52.4118 8.71646 51.7862C9.34212 51.1605 10.1068 50.8477 11.0105 50.8477C11.8795 50.8477 12.6095 51.1605 13.2004 51.7862C13.826 52.4118 14.1388 53.1765 14.1388 54.0803C14.1388 54.984 13.826 55.7487 13.2004 56.3743C12.6095 57 11.8795 57.3128 11.0105 57.3128Z"
          fill="currentColor"
        />
      </g>
      <path
        d="M40.3132 28.8745C43.3398 30.5118 45.3226 32.6909 46.2614 35.4117C47.2002 38.1326 46.8923 40.9299 45.3377 43.8037C43.6013 47.0139 41.3177 48.861 38.4871 49.3453C35.673 49.7989 32.5691 49.1079 29.1756 47.2722L26.6814 51.5543L23.0585 49.5946L26.7946 42.2497L28.1245 42.9691C31.1511 44.6064 33.7686 45.4295 35.9768 45.4384C38.185 45.4473 39.9754 44.1831 41.348 41.6456C42.3403 39.8112 42.5756 38.0613 42.0538 36.3959C41.532 34.7305 40.3386 33.3934 38.4737 32.3846C36.5782 31.3593 34.799 31.0686 33.1361 31.5127C31.5203 31.9428 30.2329 33.0444 29.2737 34.8176L25.3298 32.6843C26.3221 30.8499 27.603 29.4681 29.1727 28.5389C30.7589 27.5791 32.5078 27.1222 34.4193 27.1682C36.3613 27.2308 38.326 27.7996 40.3132 28.8745ZM19.7616 59.9631C18.9667 59.5331 18.443 58.8941 18.1903 58.0461C17.9377 57.1982 18.0264 56.3767 18.4564 55.5818C18.8864 54.787 19.5254 54.2632 20.3734 54.0106C21.2213 53.758 22.0428 53.8466 22.8377 54.2766C23.602 54.6901 24.0951 55.3125 24.3172 56.144C24.5698 56.992 24.4811 57.8134 24.0512 58.6083C23.6212 59.4032 22.9822 59.9269 22.1342 60.1795C21.3168 60.4487 20.5259 60.3765 19.7616 59.9631Z"
        fill="#EA181F"
      />
      <defs>
        <filter
          id="filter0_f_72_8041"
          x="0.799776"
          y="18.0615"
          width="27.1465"
          height="41.3803"
          filterUnits="userSpaceOnUse"
          color-interpolation-filters="sRGB"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="BackgroundImageFix"
            result="shape"
          />
          <feGaussianBlur
            stdDeviation="1.06447"
            result="effect1_foregroundBlur_72_8041"
          />
        </filter>
      </defs>
    </svg>
  );
};
