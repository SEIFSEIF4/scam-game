import * as React from "react";
import { IconSvgProps } from "@/types";

export const DiscordIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        d="M14.82 4.26a10.14 10.14 0 0 0-.53 1.1 14.66 14.66 0 0 0-4.58 0 10.14 10.14 0 0 0-.53-1.1 16 16 0 0 0-4.13 1.3 17.33 17.33 0 0 0-3 11.59 16.6 16.6 0 0 0 5.07 2.59A12.89 12.89 0 0 0 8.23 18a9.65 9.65 0 0 1-1.71-.83 3.39 3.39 0 0 0 .42-.33 11.66 11.66 0 0 0 10.12 0q.21.18.42.33a10.84 10.84 0 0 1-1.71.84 12.41 12.41 0 0 0 1.08 1.78 16.44 16.44 0 0 0 5.06-2.59 17.22 17.22 0 0 0-3-11.59 16.09 16.09 0 0 0-4.09-1.35zM8.68 14.81a1.94 1.94 0 0 1-1.8-2 1.93 1.93 0 0 1 1.8-2 1.93 1.93 0 0 1 1.8 2 1.93 1.93 0 0 1-1.8 2zm6.64 0a1.94 1.94 0 0 1-1.8-2 1.93 1.93 0 0 1 1.8-2 1.92 1.92 0 0 1 1.8 2 1.92 1.92 0 0 1-1.8 2z"
        fill="currentColor"
      />
    </svg>
  );
};

export const DiscordIconGlass: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 18"
      fill="currentColor"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M8.4018 6.19385C7.05808 6.19385 5.96484 7.39823 5.96484 8.8786C5.96484 10.359 7.05808 11.5634 8.4018 11.5634C9.74556 11.5634 10.8388 10.359 10.8388 8.8786C10.8388 7.39823 9.74556 6.19385 8.4018 6.19385ZM8.4018 10.2018C7.80884 10.2018 7.3264 9.60821 7.3264 8.8786C7.3264 8.14899 7.80884 7.5554 8.4018 7.5554C8.9948 7.5554 9.47729 8.14899 9.47729 8.8786C9.47729 9.60821 8.9948 10.2018 8.4018 10.2018Z"
        fill="currentColor"
      />
      <path
        d="M14.8345 6.19385C13.4907 6.19385 12.3975 7.39823 12.3975 8.8786C12.3975 10.359 13.4907 11.5634 14.8345 11.5634C16.1782 11.5634 17.2715 10.359 17.2715 8.8786C17.2715 7.39823 16.1782 6.19385 14.8345 6.19385ZM14.8345 10.2018C14.2415 10.2018 13.759 9.60821 13.759 8.8786C13.759 8.14899 14.2415 7.5554 14.8345 7.5554C15.4275 7.5554 15.9099 8.14899 15.9099 8.8786C15.9099 9.60821 15.4275 10.2018 14.8345 10.2018Z"
        fill="currentColor"
      />
      <path
        d="M23.2361 13.4297C23.2201 13.1419 22.813 6.3334 20.2275 2.26059C20.1746 2.1773 20.1042 2.10646 20.0213 2.05309C16.8244 -0.00553706 14.6468 0.000363081 14.5557 0C14.2916 0.00349465 14.0642 0.157078 13.9543 0.379011L12.856 2.4837C12.4469 2.45692 12.0339 2.44303 11.6186 2.44303C11.2034 2.44303 10.7903 2.45692 10.3812 2.4837L9.28417 0.381462C9.17475 0.158258 8.94659 0.00354001 8.6815 4.53602e-05C8.58987 -0.000499261 6.41252 -0.00531008 3.21596 2.05313C3.13304 2.10655 3.06265 2.17735 3.00977 2.26063C0.424276 6.3334 0.0171261 13.1419 0.00105977 13.4297C-0.00901572 13.6102 0.0530711 13.7872 0.173659 13.9219C0.293567 14.0557 3.14189 17.1855 7.07891 17.1855C7.09652 17.1855 7.11463 17.1854 7.13228 17.1853C7.33919 17.1838 7.53412 17.0883 7.66215 16.9259L9.47814 14.6213C10.1756 14.7009 10.892 14.7424 11.6186 14.7424C12.3452 14.7424 13.0616 14.7009 13.759 14.6213L15.575 16.9259C15.7031 17.0883 15.898 17.1838 16.1049 17.1853C16.1228 17.1854 16.1404 17.1855 16.1583 17.1855C20.0949 17.1855 22.9437 14.0557 23.0635 13.9219C23.1841 13.7872 23.2462 13.6102 23.2361 13.4297ZM16.4352 15.8175L15.2998 14.3766C17.0281 14.0211 18.5793 13.4161 19.7901 12.6038C20.1023 12.3943 20.1857 11.9714 19.9762 11.6592C19.7668 11.3469 19.3437 11.2635 19.0316 11.4731C17.2244 12.6855 14.5225 13.3808 11.6186 13.3808C8.71486 13.3808 6.0129 12.6855 4.20562 11.4732C3.89333 11.2638 3.47048 11.3471 3.26102 11.6593C3.05157 11.9716 3.1349 12.3945 3.44715 12.6039C4.65802 13.4161 6.20919 14.0212 7.93741 14.3767L6.8021 15.8175C4.1365 15.6938 2.0152 13.8297 1.38176 13.2111C1.48751 11.892 2.03622 6.45154 4.0805 3.11659C6.08792 1.84944 7.60283 1.49703 8.27943 1.39909L8.92535 2.63678C7.40672 2.85853 5.98395 3.26605 4.77203 3.83663C4.43187 3.99675 4.28596 4.40235 4.44607 4.74256C4.60624 5.08268 5.01184 5.22854 5.35196 5.06852C7.08322 4.25344 9.30877 3.80459 11.6186 3.80459C13.9286 3.80459 16.1542 4.25354 17.8853 5.0687C17.979 5.11281 18.0777 5.13373 18.1749 5.13373C18.4303 5.13373 18.6752 4.98918 18.7913 4.74279C18.9514 4.40267 18.8055 3.99702 18.4653 3.83686C17.2533 3.26623 15.8306 2.85863 14.3118 2.63687L14.9577 1.39918C15.6343 1.49712 17.1492 1.84953 19.1567 3.11668C21.1987 6.44813 21.7492 11.8943 21.8554 13.2123C21.2236 13.8322 19.1117 15.6948 16.4352 15.8175Z"
        fill="currentColor"
      />
    </svg>
  );
};

export const FacebookIconGlass: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 14 28"
      fill="currentColor"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M13.9997 4.6478L11.4621 4.64897C9.47248 4.64897 9.08727 5.63102 9.08727 7.07224V10.25H13.8325L13.8308 15.2275H9.08727V28H4.13783V15.2275H0V10.25H4.13783V6.57961C4.13783 2.31968 6.64323 0 10.302 0L14 0.00611055L13.9997 4.6478Z"
        fill="currentColor"
      />
    </svg>
  );
};
export const InstagramIconGlass: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="currentColor"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M11.5642 0C8.42593 0 8.03132 0.0144527 6.79829 0.0693839C5.56525 0.127207 4.72541 0.320894 3.98964 0.60711C3.21787 0.897402 2.5188 1.35276 1.94133 1.94134C1.35312 2.51911 0.897821 3.21807 0.607117 3.98964C0.320902 4.72396 0.125754 5.56526 0.0693763 6.79396C0.014445 8.02988 0 8.42304 0 11.5656C0 14.7053 0.014445 15.0985 0.0693763 16.3315C0.1272 17.5631 0.320902 18.4029 0.607117 19.1387C0.903445 19.899 1.29807 20.5437 1.94133 21.187C2.58315 21.8302 3.22785 22.2263 3.98819 22.5212C4.7254 22.8074 5.5638 23.0026 6.79539 23.0589C8.02987 23.1139 8.42304 23.1283 11.5642 23.1283C14.7053 23.1283 15.097 23.1139 16.3315 23.0589C17.5616 23.0011 18.4044 22.8074 19.1401 22.5212C19.9114 22.2308 20.6099 21.7754 21.187 21.187C21.8302 20.5437 22.2249 19.899 22.5212 19.1387C22.806 18.4029 23.0011 17.5631 23.0589 16.3315C23.1139 15.0985 23.1283 14.7053 23.1283 11.5642C23.1283 8.42305 23.1139 8.02988 23.0589 6.7954C23.0011 5.56526 22.806 4.72396 22.5212 3.98964C22.2305 3.21806 21.7752 2.51908 21.187 1.94134C20.6097 1.35254 19.9106 0.897151 19.1387 0.60711C18.4015 0.320894 17.5602 0.125761 16.33 0.0693839C15.0956 0.0144527 14.7038 0 11.5613 0H11.5642ZM10.5277 2.08443H11.5656C14.6532 2.08443 15.0189 2.09457 16.2375 2.15093C17.365 2.20153 17.9779 2.3909 18.3856 2.54845C18.9248 2.75805 19.3107 3.00957 19.7155 3.41431C20.1202 3.81905 20.3703 4.20356 20.5799 4.74419C20.7389 5.15038 20.9268 5.76326 20.9774 6.89077C21.0338 8.10934 21.0453 8.47507 21.0453 11.5613C21.0453 14.6474 21.0338 15.0146 20.9774 16.2332C20.9268 17.3607 20.7374 17.9722 20.5799 18.3798C20.3945 18.8819 20.0986 19.3359 19.714 19.7082C19.3093 20.1129 18.9248 20.363 18.3841 20.5726C17.9794 20.7316 17.3665 20.9196 16.2375 20.9716C15.0189 21.0265 14.6532 21.0395 11.5656 21.0395C8.47797 21.0395 8.11081 21.0265 6.89224 20.9716C5.76473 20.9196 5.15327 20.7316 4.74564 20.5726C4.24332 20.3875 3.78889 20.0921 3.41576 19.7082C3.03089 19.3353 2.73452 18.8809 2.54845 18.3783C2.39089 17.9721 2.20153 17.3592 2.15093 16.2317C2.096 15.0132 2.08444 14.6475 2.08444 11.5584C2.08444 8.47074 2.09601 8.10646 2.15093 6.88789C2.20297 5.76038 2.39089 5.14747 2.54989 4.73984C2.75949 4.20066 3.01101 3.8147 3.41576 3.40996C3.8205 3.00521 4.20501 2.75514 4.74564 2.54554C5.15327 2.38653 5.76473 2.19862 6.89224 2.14658C7.95903 2.09743 8.37245 2.08299 10.5277 2.08155L10.5277 2.08443ZM17.738 4.00407C16.9716 4.00407 16.3503 4.62538 16.3503 5.39178C16.3503 6.15819 16.9716 6.77949 17.738 6.77949C18.5044 6.77949 19.1257 6.15819 19.1257 5.39178C19.1257 4.62538 18.5044 4.00407 17.738 4.00407ZM11.5656 5.62595C8.28563 5.57478 5.5852 8.19225 5.53403 11.4722C5.48285 14.7522 8.1003 17.4526 11.3803 17.5038C11.4421 17.5048 11.5038 17.5048 11.5656 17.5038C14.8456 17.4526 17.463 14.7522 17.4119 11.4722C17.3618 8.26437 14.7734 5.67601 11.5656 5.62595ZM11.5656 7.70894C13.6948 7.70805 15.4215 9.43334 15.4224 11.5625C15.4233 13.6917 13.698 15.4185 11.5689 15.4194H11.5656C9.43644 15.4194 7.71041 13.6933 7.71041 11.5641C7.71041 9.43496 9.43643 7.70894 11.5656 7.70894Z"
        fill="currentColor"
      />
    </svg>
  );
};

export const TwitterIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        d="M19.633 7.997c.013.175.013.349.013.523 0 5.325-4.053 11.461-11.46 11.461-2.282 0-4.402-.661-6.186-1.809.324.037.636.05.973.05a8.07 8.07 0 0 0 5.001-1.721 4.036 4.036 0 0 1-3.767-2.793c.249.037.499.062.761.062.361 0 .724-.05 1.061-.137a4.027 4.027 0 0 1-3.23-3.953v-.05c.537.299 1.16.486 1.82.511a4.022 4.022 0 0 1-1.796-3.354c0-.748.199-1.434.548-2.032a11.457 11.457 0 0 0 8.306 4.215c-.062-.3-.1-.611-.1-.923a4.026 4.026 0 0 1 4.028-4.028c1.16 0 2.207.486 2.943 1.272a7.957 7.957 0 0 0 2.556-.973 4.02 4.02 0 0 1-1.771 2.22 8.073 8.073 0 0 0 2.319-.624 8.645 8.645 0 0 1-2.019 2.083z"
        fill="currentColor"
      />
    </svg>
  );
};

export const GithubIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        clipRule="evenodd"
        d="M12.026 2c-5.509 0-9.974 4.465-9.974 9.974 0 4.406 2.857 8.145 6.821 9.465.499.09.679-.217.679-.481 0-.237-.008-.865-.011-1.696-2.775.602-3.361-1.338-3.361-1.338-.452-1.152-1.107-1.459-1.107-1.459-.905-.619.069-.605.069-.605 1.002.07 1.527 1.028 1.527 1.028.89 1.524 2.336 1.084 2.902.829.091-.645.351-1.085.635-1.334-2.214-.251-4.542-1.107-4.542-4.93 0-1.087.389-1.979 1.024-2.675-.101-.253-.446-1.268.099-2.64 0 0 .837-.269 2.742 1.021a9.582 9.582 0 0 1 2.496-.336 9.554 9.554 0 0 1 2.496.336c1.906-1.291 2.742-1.021 2.742-1.021.545 1.372.203 2.387.099 2.64.64.696 1.024 1.587 1.024 2.675 0 3.833-2.33 4.675-4.552 4.922.355.308.675.916.675 1.846 0 1.334-.012 2.41-.012 2.737 0 .267.178.577.687.479C19.146 20.115 22 16.379 22 11.974 22 6.465 17.535 2 12.026 2z"
        fill="currentColor"
        fillRule="evenodd"
      />
    </svg>
  );
};

export const MoonFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <path
      d="M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z"
      fill="currentColor"
    />
  </svg>
);

export const SunFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <g fill="currentColor">
      <path d="M19 12a7 7 0 11-7-7 7 7 0 017 7z" />
      <path d="M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z" />
    </g>
  </svg>
);

export const HeartFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <path
      d="M12.62 20.81c-.34.12-.9.12-1.24 0C8.48 19.82 2 15.69 2 8.69 2 5.6 4.49 3.1 7.56 3.1c1.82 0 3.43.88 4.44 2.24a5.53 5.53 0 0 1 4.44-2.24C19.51 3.1 22 5.6 22 8.69c0 7-6.48 11.13-9.38 12.12Z"
      fill="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
  </svg>
);

export const SearchIcon = (props: IconSvgProps) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 24 24"
    width="1em"
    {...props}
  >
    <path
      d="M11.5 21C16.7467 21 21 16.7467 21 11.5C21 6.25329 16.7467 2 11.5 2C6.25329 2 2 6.25329 2 11.5C2 16.7467 6.25329 21 11.5 21Z"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
    />
    <path
      d="M22 22L20 20"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
    />
  </svg>
);
